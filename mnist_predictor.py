# -*- coding: utf-8 -*-
"""MNIST Predictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-DLna4PrJQ-hkc0Ca_7_2trp2xS6AwDv

# **Connecting Google Drive to the Google Colab Environment**
"""

from google.colab import drive
drive.mount('/content/drive')

"""# **Importing Libraries**"""

# Commented out IPython magic to ensure Python compatibility.
import tensorflow as tf 
from keras.preprocessing import image
import numpy as np
from PIL import Image
import matplotlib.pyplot as plt
# %matplotlib inline

"""# **Preprocessing Code to Make Prediction Images Model Compatible**"""

def preprocess(photo_path):
    img = Image.open(photo_path)
    img = img.resize((28, 28))
    img = img.convert('L')
    img = np.asarray(img, dtype="int32")
    fig = plt.imshow(img, cmap = 'gray')
    fig.axes.get_xaxis().set_visible(False)
    fig.axes.get_yaxis().set_visible(False)
    img = img.reshape(-1, 28, 28, 1) / 255
    
    return img

"""# Predicting Classes from the **Model**"""

model = tf.keras.models.load_model("/content/drive/MyDrive/.../BasicMNISTModel.h5")

photo_path = r'/content/drive/MyDrive/.../4.1.jpg' # file path of the image that is going to be predicted
image = preprocess(photo_path)

print('Model Predicted:' , int(np.argmax(model.predict(image), axis=-1)))

